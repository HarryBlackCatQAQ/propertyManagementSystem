<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bnuz.propertyManagementSystem.dao.ComplaintAndSuggestionSheetImageDao">
  <resultMap id="BaseResultMap" type="com.bnuz.propertyManagementSystem.model.ComplaintAndSuggestionSheetImage">
    <id column="complaint_and_suggestion_sheet_Image_id" jdbcType="INTEGER" property="id" />
    <result column="complaint_and_suggestion_sheet_Image_sheetId" jdbcType="INTEGER" property="sheetId" />
    <result column="complaint_and_suggestion_sheet_Image_path" jdbcType="VARCHAR" property="path" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    complaint_and_suggestion_sheet_Image.id as complaint_and_suggestion_sheet_Image_id, 
    complaint_and_suggestion_sheet_Image.sheetId as complaint_and_suggestion_sheet_Image_sheetId, 
    complaint_and_suggestion_sheet_Image.`path` as `complaint_and_suggestion_sheet_Image_path`
  </sql>
  <select id="selectByExample" parameterType="com.bnuz.propertyManagementSystem.model.ComplaintAndSuggestionSheetImageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from complaint_and_suggestion_sheet_Image complaint_and_suggestion_sheet_Image
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from complaint_and_suggestion_sheet_Image complaint_and_suggestion_sheet_Image
    where complaint_and_suggestion_sheet_Image.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from complaint_and_suggestion_sheet_Image
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bnuz.propertyManagementSystem.model.ComplaintAndSuggestionSheetImageExample">
    delete from complaint_and_suggestion_sheet_Image complaint_and_suggestion_sheet_Image
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.bnuz.propertyManagementSystem.model.ComplaintAndSuggestionSheetImage" useGeneratedKeys="true">
    insert into complaint_and_suggestion_sheet_Image (sheetId, `path`)
    values (#{sheetId,jdbcType=INTEGER}, #{path,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.bnuz.propertyManagementSystem.model.ComplaintAndSuggestionSheetImage" useGeneratedKeys="true">
    insert into complaint_and_suggestion_sheet_Image
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sheetId != null">
        sheetId,
      </if>
      <if test="path != null">
        `path`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sheetId != null">
        #{sheetId,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bnuz.propertyManagementSystem.model.ComplaintAndSuggestionSheetImageExample" resultType="java.lang.Long">
    select count(*) from complaint_and_suggestion_sheet_Image complaint_and_suggestion_sheet_Image
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update complaint_and_suggestion_sheet_Image complaint_and_suggestion_sheet_Image
    <set>
      <if test="record.id != null">
        complaint_and_suggestion_sheet_Image.id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sheetId != null">
        complaint_and_suggestion_sheet_Image.sheetId = #{record.sheetId,jdbcType=INTEGER},
      </if>
      <if test="record.path != null">
        complaint_and_suggestion_sheet_Image.`path` = #{record.path,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update complaint_and_suggestion_sheet_Image complaint_and_suggestion_sheet_Image
    set complaint_and_suggestion_sheet_Image.id = #{record.id,jdbcType=INTEGER},
      complaint_and_suggestion_sheet_Image.sheetId = #{record.sheetId,jdbcType=INTEGER},
      complaint_and_suggestion_sheet_Image.`path` = #{record.path,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bnuz.propertyManagementSystem.model.ComplaintAndSuggestionSheetImage">
    update complaint_and_suggestion_sheet_Image
    <set>
      <if test="sheetId != null">
        sheetId = #{sheetId,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        `path` = #{path,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bnuz.propertyManagementSystem.model.ComplaintAndSuggestionSheetImage">
    update complaint_and_suggestion_sheet_Image
    set sheetId = #{sheetId,jdbcType=INTEGER},
      `path` = #{path,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>