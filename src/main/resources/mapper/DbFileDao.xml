<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bnuz.propertyManagementSystem.dao.DbFileDao">
  <resultMap id="BaseResultMap" type="com.bnuz.propertyManagementSystem.model.DbFile">
    <id column="db_file_id" jdbcType="INTEGER" property="id" />
    <result column="db_file_fileName" jdbcType="VARCHAR" property="fileName" />
    <result column="db_file_path" jdbcType="VARCHAR" property="path" />
    <result column="db_file_backupTime" jdbcType="TIMESTAMP" property="backupTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    db_file.id as db_file_id, db_file.fileName as db_file_fileName, db_file.`path` as `db_file_path`, 
    db_file.backupTime as db_file_backupTime
  </sql>
  <select id="selectByExample" parameterType="com.bnuz.propertyManagementSystem.model.DbFileExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from db_file db_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from db_file db_file
    where db_file.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from db_file
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bnuz.propertyManagementSystem.model.DbFileExample">
    delete from db_file db_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.bnuz.propertyManagementSystem.model.DbFile" useGeneratedKeys="true">
    insert into db_file (fileName, `path`, backupTime
      )
    values (#{fileName,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{backupTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.bnuz.propertyManagementSystem.model.DbFile" useGeneratedKeys="true">
    insert into db_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fileName != null">
        fileName,
      </if>
      <if test="path != null">
        `path`,
      </if>
      <if test="backupTime != null">
        backupTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="backupTime != null">
        #{backupTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bnuz.propertyManagementSystem.model.DbFileExample" resultType="java.lang.Long">
    select count(*) from db_file db_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update db_file db_file
    <set>
      <if test="record.id != null">
        db_file.id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fileName != null">
        db_file.fileName = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null">
        db_file.`path` = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.backupTime != null">
        db_file.backupTime = #{record.backupTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update db_file db_file
    set db_file.id = #{record.id,jdbcType=INTEGER},
      db_file.fileName = #{record.fileName,jdbcType=VARCHAR},
      db_file.`path` = #{record.path,jdbcType=VARCHAR},
      db_file.backupTime = #{record.backupTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bnuz.propertyManagementSystem.model.DbFile">
    update db_file
    <set>
      <if test="fileName != null">
        fileName = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        `path` = #{path,jdbcType=VARCHAR},
      </if>
      <if test="backupTime != null">
        backupTime = #{backupTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bnuz.propertyManagementSystem.model.DbFile">
    update db_file
    set fileName = #{fileName,jdbcType=VARCHAR},
      `path` = #{path,jdbcType=VARCHAR},
      backupTime = #{backupTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>